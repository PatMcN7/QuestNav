// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: data.proto
// Protobuf C++ Version: 6.31.1

#include "data.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace questnav {
namespace protos {
namespace data {

inline constexpr ProtobufQuestNavDeviceData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tracking_lost_counter_{0},
        currently_tracking_{false},
        battery_percent_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProtobufQuestNavDeviceData::ProtobufQuestNavDeviceData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ProtobufQuestNavDeviceData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProtobufQuestNavDeviceDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtobufQuestNavDeviceDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtobufQuestNavDeviceDataDefaultTypeInternal() {}
  union {
    ProtobufQuestNavDeviceData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtobufQuestNavDeviceDataDefaultTypeInternal _ProtobufQuestNavDeviceData_default_instance_;

inline constexpr ProtobufQuestNavFrameData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pose2d_{nullptr},
        timestamp_{0},
        frame_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProtobufQuestNavFrameData::ProtobufQuestNavFrameData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ProtobufQuestNavFrameData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProtobufQuestNavFrameDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtobufQuestNavFrameDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtobufQuestNavFrameDataDefaultTypeInternal() {}
  union {
    ProtobufQuestNavFrameData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtobufQuestNavFrameDataDefaultTypeInternal _ProtobufQuestNavFrameData_default_instance_;
}  // namespace data
}  // namespace protos
}  // namespace questnav
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_data_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_data_2eproto = nullptr;
const ::uint32_t
    TableStruct_data_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::questnav::protos::data::ProtobufQuestNavFrameData, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::questnav::protos::data::ProtobufQuestNavFrameData, _impl_.frame_count_),
        PROTOBUF_FIELD_OFFSET(::questnav::protos::data::ProtobufQuestNavFrameData, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::questnav::protos::data::ProtobufQuestNavFrameData, _impl_.pose2d_),
        2,
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::questnav::protos::data::ProtobufQuestNavDeviceData, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::questnav::protos::data::ProtobufQuestNavDeviceData, _impl_.tracking_lost_counter_),
        PROTOBUF_FIELD_OFFSET(::questnav::protos::data::ProtobufQuestNavDeviceData, _impl_.currently_tracking_),
        PROTOBUF_FIELD_OFFSET(::questnav::protos::data::ProtobufQuestNavDeviceData, _impl_.battery_percent_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::questnav::protos::data::ProtobufQuestNavFrameData)},
        {9, sizeof(::questnav::protos::data::ProtobufQuestNavDeviceData)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::questnav::protos::data::_ProtobufQuestNavFrameData_default_instance_._instance,
    &::questnav::protos::data::_ProtobufQuestNavDeviceData_default_instance_._instance,
};
const char descriptor_table_protodef_data_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ndata.proto\022\024questnav.protos.data\032\020geom"
    "etry2d.proto\"n\n\031ProtobufQuestNavFrameDat"
    "a\022\023\n\013frame_count\030\001 \001(\005\022\021\n\ttimestamp\030\002 \001("
    "\001\022)\n\006pose2d\030\003 \001(\0132\031.wpi.proto.ProtobufPo"
    "se2d\"p\n\032ProtobufQuestNavDeviceData\022\035\n\025tr"
    "acking_lost_counter\030\001 \001(\005\022\032\n\022currently_t"
    "racking\030\002 \001(\010\022\027\n\017battery_percent\030\003 \001(\005BC"
    "\n%gg.questnav.questnav.protos.generated\252"
    "\002\031QuestNav.Protos.Generatedb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_data_2eproto_deps[1] = {
        &::descriptor_table_geometry2d_2eproto,
};
static ::absl::once_flag descriptor_table_data_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_data_2eproto = {
    false,
    false,
    355,
    descriptor_table_protodef_data_2eproto,
    "data.proto",
    &descriptor_table_data_2eproto_once,
    descriptor_table_data_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_data_2eproto::offsets,
    file_level_enum_descriptors_data_2eproto,
    file_level_service_descriptors_data_2eproto,
};
namespace questnav {
namespace protos {
namespace data {
// ===================================================================

class ProtobufQuestNavFrameData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ProtobufQuestNavFrameData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_._has_bits_);
};

void ProtobufQuestNavFrameData::clear_pose2d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose2d_ != nullptr) _impl_.pose2d_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ProtobufQuestNavFrameData::ProtobufQuestNavFrameData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProtobufQuestNavFrameData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:questnav.protos.data.ProtobufQuestNavFrameData)
}
PROTOBUF_NDEBUG_INLINE ProtobufQuestNavFrameData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::questnav::protos::data::ProtobufQuestNavFrameData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ProtobufQuestNavFrameData::ProtobufQuestNavFrameData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ProtobufQuestNavFrameData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProtobufQuestNavFrameData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProtobufQuestNavFrameData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pose2d_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose2d_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, frame_count_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::frame_count_));

  // @@protoc_insertion_point(copy_constructor:questnav.protos.data.ProtobufQuestNavFrameData)
}
PROTOBUF_NDEBUG_INLINE ProtobufQuestNavFrameData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ProtobufQuestNavFrameData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pose2d_),
           0,
           offsetof(Impl_, frame_count_) -
               offsetof(Impl_, pose2d_) +
               sizeof(Impl_::frame_count_));
}
ProtobufQuestNavFrameData::~ProtobufQuestNavFrameData() {
  // @@protoc_insertion_point(destructor:questnav.protos.data.ProtobufQuestNavFrameData)
  SharedDtor(*this);
}
inline void ProtobufQuestNavFrameData::SharedDtor(MessageLite& self) {
  ProtobufQuestNavFrameData& this_ = static_cast<ProtobufQuestNavFrameData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pose2d_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ProtobufQuestNavFrameData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ProtobufQuestNavFrameData(arena);
}
constexpr auto ProtobufQuestNavFrameData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ProtobufQuestNavFrameData),
                                            alignof(ProtobufQuestNavFrameData));
}
constexpr auto ProtobufQuestNavFrameData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ProtobufQuestNavFrameData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ProtobufQuestNavFrameData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ProtobufQuestNavFrameData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ProtobufQuestNavFrameData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ProtobufQuestNavFrameData>(), &ProtobufQuestNavFrameData::ByteSizeLong,
              &ProtobufQuestNavFrameData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_._cached_size_),
          false,
      },
      &ProtobufQuestNavFrameData::kDescriptorMethods,
      &descriptor_table_data_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ProtobufQuestNavFrameData_class_data_ =
        ProtobufQuestNavFrameData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ProtobufQuestNavFrameData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ProtobufQuestNavFrameData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ProtobufQuestNavFrameData_class_data_.tc_table);
  return ProtobufQuestNavFrameData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
ProtobufQuestNavFrameData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ProtobufQuestNavFrameData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::questnav::protos::data::ProtobufQuestNavFrameData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 frame_count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtobufQuestNavFrameData, _impl_.frame_count_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_.frame_count_)}},
    // double timestamp = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_.timestamp_)}},
    // .wpi.proto.ProtobufPose2d pose2d = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_.pose2d_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 frame_count = 1;
    {PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_.frame_count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .wpi.proto.ProtobufPose2d pose2d = 3;
    {PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_.pose2d_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::wpi::proto::ProtobufPose2d>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ProtobufQuestNavFrameData::Clear() {
// @@protoc_insertion_point(message_clear_start:questnav.protos.data.ProtobufQuestNavFrameData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.pose2d_ != nullptr);
    _impl_.pose2d_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.frame_count_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.frame_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ProtobufQuestNavFrameData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ProtobufQuestNavFrameData& this_ = static_cast<const ProtobufQuestNavFrameData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ProtobufQuestNavFrameData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ProtobufQuestNavFrameData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:questnav.protos.data.ProtobufQuestNavFrameData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 frame_count = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_frame_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_frame_count(), target);
    }
  }

  // double timestamp = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_timestamp()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_timestamp(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .wpi.proto.ProtobufPose2d pose2d = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.pose2d_, this_._impl_.pose2d_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:questnav.protos.data.ProtobufQuestNavFrameData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ProtobufQuestNavFrameData::ByteSizeLong(const MessageLite& base) {
  const ProtobufQuestNavFrameData& this_ = static_cast<const ProtobufQuestNavFrameData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ProtobufQuestNavFrameData::ByteSizeLong() const {
  const ProtobufQuestNavFrameData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:questnav.protos.data.ProtobufQuestNavFrameData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .wpi.proto.ProtobufPose2d pose2d = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pose2d_);
    }
    // double timestamp = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_timestamp()) != 0) {
        total_size += 9;
      }
    }
    // int32 frame_count = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_frame_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_frame_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ProtobufQuestNavFrameData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProtobufQuestNavFrameData*>(&to_msg);
  auto& from = static_cast<const ProtobufQuestNavFrameData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:questnav.protos.data.ProtobufQuestNavFrameData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.pose2d_ != nullptr);
      if (_this->_impl_.pose2d_ == nullptr) {
        _this->_impl_.pose2d_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pose2d_);
      } else {
        _this->_impl_.pose2d_->MergeFrom(*from._impl_.pose2d_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_timestamp()) != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_frame_count() != 0) {
        _this->_impl_.frame_count_ = from._impl_.frame_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtobufQuestNavFrameData::CopyFrom(const ProtobufQuestNavFrameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:questnav.protos.data.ProtobufQuestNavFrameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProtobufQuestNavFrameData::InternalSwap(ProtobufQuestNavFrameData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_.frame_count_)
      + sizeof(ProtobufQuestNavFrameData::_impl_.frame_count_)
      - PROTOBUF_FIELD_OFFSET(ProtobufQuestNavFrameData, _impl_.pose2d_)>(
          reinterpret_cast<char*>(&_impl_.pose2d_),
          reinterpret_cast<char*>(&other->_impl_.pose2d_));
}

::google::protobuf::Metadata ProtobufQuestNavFrameData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProtobufQuestNavDeviceData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ProtobufQuestNavDeviceData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_._has_bits_);
};

ProtobufQuestNavDeviceData::ProtobufQuestNavDeviceData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProtobufQuestNavDeviceData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:questnav.protos.data.ProtobufQuestNavDeviceData)
}
ProtobufQuestNavDeviceData::ProtobufQuestNavDeviceData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProtobufQuestNavDeviceData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProtobufQuestNavDeviceData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ProtobufQuestNavDeviceData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ProtobufQuestNavDeviceData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tracking_lost_counter_),
           0,
           offsetof(Impl_, battery_percent_) -
               offsetof(Impl_, tracking_lost_counter_) +
               sizeof(Impl_::battery_percent_));
}
ProtobufQuestNavDeviceData::~ProtobufQuestNavDeviceData() {
  // @@protoc_insertion_point(destructor:questnav.protos.data.ProtobufQuestNavDeviceData)
  SharedDtor(*this);
}
inline void ProtobufQuestNavDeviceData::SharedDtor(MessageLite& self) {
  ProtobufQuestNavDeviceData& this_ = static_cast<ProtobufQuestNavDeviceData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ProtobufQuestNavDeviceData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ProtobufQuestNavDeviceData(arena);
}
constexpr auto ProtobufQuestNavDeviceData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ProtobufQuestNavDeviceData),
                                            alignof(ProtobufQuestNavDeviceData));
}
constexpr auto ProtobufQuestNavDeviceData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ProtobufQuestNavDeviceData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ProtobufQuestNavDeviceData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ProtobufQuestNavDeviceData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ProtobufQuestNavDeviceData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ProtobufQuestNavDeviceData>(), &ProtobufQuestNavDeviceData::ByteSizeLong,
              &ProtobufQuestNavDeviceData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_._cached_size_),
          false,
      },
      &ProtobufQuestNavDeviceData::kDescriptorMethods,
      &descriptor_table_data_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ProtobufQuestNavDeviceData_class_data_ =
        ProtobufQuestNavDeviceData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ProtobufQuestNavDeviceData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ProtobufQuestNavDeviceData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ProtobufQuestNavDeviceData_class_data_.tc_table);
  return ProtobufQuestNavDeviceData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
ProtobufQuestNavDeviceData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ProtobufQuestNavDeviceData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::questnav::protos::data::ProtobufQuestNavDeviceData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 tracking_lost_counter = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtobufQuestNavDeviceData, _impl_.tracking_lost_counter_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_.tracking_lost_counter_)}},
    // bool currently_tracking = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProtobufQuestNavDeviceData, _impl_.currently_tracking_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_.currently_tracking_)}},
    // int32 battery_percent = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtobufQuestNavDeviceData, _impl_.battery_percent_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_.battery_percent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 tracking_lost_counter = 1;
    {PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_.tracking_lost_counter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool currently_tracking = 2;
    {PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_.currently_tracking_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 battery_percent = 3;
    {PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_.battery_percent_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ProtobufQuestNavDeviceData::Clear() {
// @@protoc_insertion_point(message_clear_start:questnav.protos.data.ProtobufQuestNavDeviceData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.tracking_lost_counter_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.battery_percent_) -
        reinterpret_cast<char*>(&_impl_.tracking_lost_counter_)) + sizeof(_impl_.battery_percent_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ProtobufQuestNavDeviceData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ProtobufQuestNavDeviceData& this_ = static_cast<const ProtobufQuestNavDeviceData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ProtobufQuestNavDeviceData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ProtobufQuestNavDeviceData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:questnav.protos.data.ProtobufQuestNavDeviceData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 tracking_lost_counter = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_tracking_lost_counter() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_tracking_lost_counter(), target);
    }
  }

  // bool currently_tracking = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_currently_tracking() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_currently_tracking(), target);
    }
  }

  // int32 battery_percent = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_battery_percent() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_battery_percent(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:questnav.protos.data.ProtobufQuestNavDeviceData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ProtobufQuestNavDeviceData::ByteSizeLong(const MessageLite& base) {
  const ProtobufQuestNavDeviceData& this_ = static_cast<const ProtobufQuestNavDeviceData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ProtobufQuestNavDeviceData::ByteSizeLong() const {
  const ProtobufQuestNavDeviceData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:questnav.protos.data.ProtobufQuestNavDeviceData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // int32 tracking_lost_counter = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_tracking_lost_counter() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_tracking_lost_counter());
      }
    }
    // bool currently_tracking = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_currently_tracking() != 0) {
        total_size += 2;
      }
    }
    // int32 battery_percent = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_battery_percent() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_battery_percent());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ProtobufQuestNavDeviceData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProtobufQuestNavDeviceData*>(&to_msg);
  auto& from = static_cast<const ProtobufQuestNavDeviceData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:questnav.protos.data.ProtobufQuestNavDeviceData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_tracking_lost_counter() != 0) {
        _this->_impl_.tracking_lost_counter_ = from._impl_.tracking_lost_counter_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_currently_tracking() != 0) {
        _this->_impl_.currently_tracking_ = from._impl_.currently_tracking_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_battery_percent() != 0) {
        _this->_impl_.battery_percent_ = from._impl_.battery_percent_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtobufQuestNavDeviceData::CopyFrom(const ProtobufQuestNavDeviceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:questnav.protos.data.ProtobufQuestNavDeviceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProtobufQuestNavDeviceData::InternalSwap(ProtobufQuestNavDeviceData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_.battery_percent_)
      + sizeof(ProtobufQuestNavDeviceData::_impl_.battery_percent_)
      - PROTOBUF_FIELD_OFFSET(ProtobufQuestNavDeviceData, _impl_.tracking_lost_counter_)>(
          reinterpret_cast<char*>(&_impl_.tracking_lost_counter_),
          reinterpret_cast<char*>(&other->_impl_.tracking_lost_counter_));
}

::google::protobuf::Metadata ProtobufQuestNavDeviceData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace data
}  // namespace protos
}  // namespace questnav
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_data_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
