// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: data.proto
// Protobuf C++ Version: 6.31.1

#ifndef data_2eproto_2epb_2eh
#define data_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "geometry2d.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_data_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_data_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_data_2eproto;
}  // extern "C"
namespace questnav {
namespace protos {
namespace data {
class ProtobufQuestNavDeviceData;
struct ProtobufQuestNavDeviceDataDefaultTypeInternal;
extern ProtobufQuestNavDeviceDataDefaultTypeInternal _ProtobufQuestNavDeviceData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProtobufQuestNavDeviceData_class_data_;
class ProtobufQuestNavFrameData;
struct ProtobufQuestNavFrameDataDefaultTypeInternal;
extern ProtobufQuestNavFrameDataDefaultTypeInternal _ProtobufQuestNavFrameData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProtobufQuestNavFrameData_class_data_;
}  // namespace data
}  // namespace protos
}  // namespace questnav
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace questnav {
namespace protos {
namespace data {

// ===================================================================


// -------------------------------------------------------------------

class ProtobufQuestNavDeviceData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:questnav.protos.data.ProtobufQuestNavDeviceData) */ {
 public:
  inline ProtobufQuestNavDeviceData() : ProtobufQuestNavDeviceData(nullptr) {}
  ~ProtobufQuestNavDeviceData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProtobufQuestNavDeviceData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProtobufQuestNavDeviceData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProtobufQuestNavDeviceData(::google::protobuf::internal::ConstantInitialized);

  inline ProtobufQuestNavDeviceData(const ProtobufQuestNavDeviceData& from) : ProtobufQuestNavDeviceData(nullptr, from) {}
  inline ProtobufQuestNavDeviceData(ProtobufQuestNavDeviceData&& from) noexcept
      : ProtobufQuestNavDeviceData(nullptr, ::std::move(from)) {}
  inline ProtobufQuestNavDeviceData& operator=(const ProtobufQuestNavDeviceData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtobufQuestNavDeviceData& operator=(ProtobufQuestNavDeviceData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtobufQuestNavDeviceData& default_instance() {
    return *reinterpret_cast<const ProtobufQuestNavDeviceData*>(
        &_ProtobufQuestNavDeviceData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ProtobufQuestNavDeviceData& a, ProtobufQuestNavDeviceData& b) { a.Swap(&b); }
  inline void Swap(ProtobufQuestNavDeviceData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtobufQuestNavDeviceData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtobufQuestNavDeviceData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProtobufQuestNavDeviceData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProtobufQuestNavDeviceData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProtobufQuestNavDeviceData& from) { ProtobufQuestNavDeviceData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProtobufQuestNavDeviceData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "questnav.protos.data.ProtobufQuestNavDeviceData"; }

 protected:
  explicit ProtobufQuestNavDeviceData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProtobufQuestNavDeviceData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProtobufQuestNavDeviceData& from);
  ProtobufQuestNavDeviceData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProtobufQuestNavDeviceData&& from) noexcept
      : ProtobufQuestNavDeviceData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTrackingLostCounterFieldNumber = 1,
    kCurrentlyTrackingFieldNumber = 2,
    kBatteryPercentFieldNumber = 3,
  };
  // int32 tracking_lost_counter = 1;
  void clear_tracking_lost_counter() ;
  ::int32_t tracking_lost_counter() const;
  void set_tracking_lost_counter(::int32_t value);

  private:
  ::int32_t _internal_tracking_lost_counter() const;
  void _internal_set_tracking_lost_counter(::int32_t value);

  public:
  // bool currently_tracking = 2;
  void clear_currently_tracking() ;
  bool currently_tracking() const;
  void set_currently_tracking(bool value);

  private:
  bool _internal_currently_tracking() const;
  void _internal_set_currently_tracking(bool value);

  public:
  // int32 battery_percent = 3;
  void clear_battery_percent() ;
  ::int32_t battery_percent() const;
  void set_battery_percent(::int32_t value);

  private:
  ::int32_t _internal_battery_percent() const;
  void _internal_set_battery_percent(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:questnav.protos.data.ProtobufQuestNavDeviceData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProtobufQuestNavDeviceData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t tracking_lost_counter_;
    bool currently_tracking_;
    ::int32_t battery_percent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProtobufQuestNavDeviceData_class_data_;
// -------------------------------------------------------------------

class ProtobufQuestNavFrameData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:questnav.protos.data.ProtobufQuestNavFrameData) */ {
 public:
  inline ProtobufQuestNavFrameData() : ProtobufQuestNavFrameData(nullptr) {}
  ~ProtobufQuestNavFrameData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProtobufQuestNavFrameData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProtobufQuestNavFrameData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProtobufQuestNavFrameData(::google::protobuf::internal::ConstantInitialized);

  inline ProtobufQuestNavFrameData(const ProtobufQuestNavFrameData& from) : ProtobufQuestNavFrameData(nullptr, from) {}
  inline ProtobufQuestNavFrameData(ProtobufQuestNavFrameData&& from) noexcept
      : ProtobufQuestNavFrameData(nullptr, ::std::move(from)) {}
  inline ProtobufQuestNavFrameData& operator=(const ProtobufQuestNavFrameData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtobufQuestNavFrameData& operator=(ProtobufQuestNavFrameData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtobufQuestNavFrameData& default_instance() {
    return *reinterpret_cast<const ProtobufQuestNavFrameData*>(
        &_ProtobufQuestNavFrameData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ProtobufQuestNavFrameData& a, ProtobufQuestNavFrameData& b) { a.Swap(&b); }
  inline void Swap(ProtobufQuestNavFrameData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtobufQuestNavFrameData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtobufQuestNavFrameData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProtobufQuestNavFrameData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProtobufQuestNavFrameData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProtobufQuestNavFrameData& from) { ProtobufQuestNavFrameData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProtobufQuestNavFrameData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "questnav.protos.data.ProtobufQuestNavFrameData"; }

 protected:
  explicit ProtobufQuestNavFrameData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProtobufQuestNavFrameData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProtobufQuestNavFrameData& from);
  ProtobufQuestNavFrameData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProtobufQuestNavFrameData&& from) noexcept
      : ProtobufQuestNavFrameData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPose2DFieldNumber = 3,
    kTimestampFieldNumber = 2,
    kFrameCountFieldNumber = 1,
  };
  // .wpi.proto.ProtobufPose2d pose2d = 3;
  bool has_pose2d() const;
  void clear_pose2d() ;
  const ::wpi::proto::ProtobufPose2d& pose2d() const;
  [[nodiscard]] ::wpi::proto::ProtobufPose2d* PROTOBUF_NULLABLE release_pose2d();
  ::wpi::proto::ProtobufPose2d* PROTOBUF_NONNULL mutable_pose2d();
  void set_allocated_pose2d(::wpi::proto::ProtobufPose2d* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pose2d(::wpi::proto::ProtobufPose2d* PROTOBUF_NULLABLE value);
  ::wpi::proto::ProtobufPose2d* PROTOBUF_NULLABLE unsafe_arena_release_pose2d();

  private:
  const ::wpi::proto::ProtobufPose2d& _internal_pose2d() const;
  ::wpi::proto::ProtobufPose2d* PROTOBUF_NONNULL _internal_mutable_pose2d();

  public:
  // double timestamp = 2;
  void clear_timestamp() ;
  double timestamp() const;
  void set_timestamp(double value);

  private:
  double _internal_timestamp() const;
  void _internal_set_timestamp(double value);

  public:
  // int32 frame_count = 1;
  void clear_frame_count() ;
  ::int32_t frame_count() const;
  void set_frame_count(::int32_t value);

  private:
  ::int32_t _internal_frame_count() const;
  void _internal_set_frame_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:questnav.protos.data.ProtobufQuestNavFrameData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProtobufQuestNavFrameData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::wpi::proto::ProtobufPose2d* PROTOBUF_NULLABLE pose2d_;
    double timestamp_;
    ::int32_t frame_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProtobufQuestNavFrameData_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ProtobufQuestNavFrameData

// int32 frame_count = 1;
inline void ProtobufQuestNavFrameData::clear_frame_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t ProtobufQuestNavFrameData::frame_count() const {
  // @@protoc_insertion_point(field_get:questnav.protos.data.ProtobufQuestNavFrameData.frame_count)
  return _internal_frame_count();
}
inline void ProtobufQuestNavFrameData::set_frame_count(::int32_t value) {
  _internal_set_frame_count(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:questnav.protos.data.ProtobufQuestNavFrameData.frame_count)
}
inline ::int32_t ProtobufQuestNavFrameData::_internal_frame_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_count_;
}
inline void ProtobufQuestNavFrameData::_internal_set_frame_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_count_ = value;
}

// double timestamp = 2;
inline void ProtobufQuestNavFrameData::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double ProtobufQuestNavFrameData::timestamp() const {
  // @@protoc_insertion_point(field_get:questnav.protos.data.ProtobufQuestNavFrameData.timestamp)
  return _internal_timestamp();
}
inline void ProtobufQuestNavFrameData::set_timestamp(double value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:questnav.protos.data.ProtobufQuestNavFrameData.timestamp)
}
inline double ProtobufQuestNavFrameData::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ProtobufQuestNavFrameData::_internal_set_timestamp(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// .wpi.proto.ProtobufPose2d pose2d = 3;
inline bool ProtobufQuestNavFrameData::has_pose2d() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose2d_ != nullptr);
  return value;
}
inline const ::wpi::proto::ProtobufPose2d& ProtobufQuestNavFrameData::_internal_pose2d() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::wpi::proto::ProtobufPose2d* p = _impl_.pose2d_;
  return p != nullptr ? *p : reinterpret_cast<const ::wpi::proto::ProtobufPose2d&>(::wpi::proto::_ProtobufPose2d_default_instance_);
}
inline const ::wpi::proto::ProtobufPose2d& ProtobufQuestNavFrameData::pose2d() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:questnav.protos.data.ProtobufQuestNavFrameData.pose2d)
  return _internal_pose2d();
}
inline void ProtobufQuestNavFrameData::unsafe_arena_set_allocated_pose2d(
    ::wpi::proto::ProtobufPose2d* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose2d_);
  }
  _impl_.pose2d_ = reinterpret_cast<::wpi::proto::ProtobufPose2d*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:questnav.protos.data.ProtobufQuestNavFrameData.pose2d)
}
inline ::wpi::proto::ProtobufPose2d* PROTOBUF_NULLABLE ProtobufQuestNavFrameData::release_pose2d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::wpi::proto::ProtobufPose2d* released = _impl_.pose2d_;
  _impl_.pose2d_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::wpi::proto::ProtobufPose2d* PROTOBUF_NULLABLE ProtobufQuestNavFrameData::unsafe_arena_release_pose2d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:questnav.protos.data.ProtobufQuestNavFrameData.pose2d)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::wpi::proto::ProtobufPose2d* temp = _impl_.pose2d_;
  _impl_.pose2d_ = nullptr;
  return temp;
}
inline ::wpi::proto::ProtobufPose2d* PROTOBUF_NONNULL ProtobufQuestNavFrameData::_internal_mutable_pose2d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose2d_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::wpi::proto::ProtobufPose2d>(GetArena());
    _impl_.pose2d_ = reinterpret_cast<::wpi::proto::ProtobufPose2d*>(p);
  }
  return _impl_.pose2d_;
}
inline ::wpi::proto::ProtobufPose2d* PROTOBUF_NONNULL ProtobufQuestNavFrameData::mutable_pose2d()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::wpi::proto::ProtobufPose2d* _msg = _internal_mutable_pose2d();
  // @@protoc_insertion_point(field_mutable:questnav.protos.data.ProtobufQuestNavFrameData.pose2d)
  return _msg;
}
inline void ProtobufQuestNavFrameData::set_allocated_pose2d(::wpi::proto::ProtobufPose2d* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose2d_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pose2d_ = reinterpret_cast<::wpi::proto::ProtobufPose2d*>(value);
  // @@protoc_insertion_point(field_set_allocated:questnav.protos.data.ProtobufQuestNavFrameData.pose2d)
}

// -------------------------------------------------------------------

// ProtobufQuestNavDeviceData

// int32 tracking_lost_counter = 1;
inline void ProtobufQuestNavDeviceData::clear_tracking_lost_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracking_lost_counter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t ProtobufQuestNavDeviceData::tracking_lost_counter() const {
  // @@protoc_insertion_point(field_get:questnav.protos.data.ProtobufQuestNavDeviceData.tracking_lost_counter)
  return _internal_tracking_lost_counter();
}
inline void ProtobufQuestNavDeviceData::set_tracking_lost_counter(::int32_t value) {
  _internal_set_tracking_lost_counter(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:questnav.protos.data.ProtobufQuestNavDeviceData.tracking_lost_counter)
}
inline ::int32_t ProtobufQuestNavDeviceData::_internal_tracking_lost_counter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tracking_lost_counter_;
}
inline void ProtobufQuestNavDeviceData::_internal_set_tracking_lost_counter(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracking_lost_counter_ = value;
}

// bool currently_tracking = 2;
inline void ProtobufQuestNavDeviceData::clear_currently_tracking() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currently_tracking_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool ProtobufQuestNavDeviceData::currently_tracking() const {
  // @@protoc_insertion_point(field_get:questnav.protos.data.ProtobufQuestNavDeviceData.currently_tracking)
  return _internal_currently_tracking();
}
inline void ProtobufQuestNavDeviceData::set_currently_tracking(bool value) {
  _internal_set_currently_tracking(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:questnav.protos.data.ProtobufQuestNavDeviceData.currently_tracking)
}
inline bool ProtobufQuestNavDeviceData::_internal_currently_tracking() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currently_tracking_;
}
inline void ProtobufQuestNavDeviceData::_internal_set_currently_tracking(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currently_tracking_ = value;
}

// int32 battery_percent = 3;
inline void ProtobufQuestNavDeviceData::clear_battery_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battery_percent_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t ProtobufQuestNavDeviceData::battery_percent() const {
  // @@protoc_insertion_point(field_get:questnav.protos.data.ProtobufQuestNavDeviceData.battery_percent)
  return _internal_battery_percent();
}
inline void ProtobufQuestNavDeviceData::set_battery_percent(::int32_t value) {
  _internal_set_battery_percent(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:questnav.protos.data.ProtobufQuestNavDeviceData.battery_percent)
}
inline ::int32_t ProtobufQuestNavDeviceData::_internal_battery_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.battery_percent_;
}
inline void ProtobufQuestNavDeviceData::_internal_set_battery_percent(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.battery_percent_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace data
}  // namespace protos
}  // namespace questnav


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // data_2eproto_2epb_2eh
